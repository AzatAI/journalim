/*
 * JBS Backend Service
 * Journalim Protocol Compatible Backend Service
 *
 * OpenAPI spec version: 0.0.1
 * Contact: a@azat.ai
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.ErrorResponseModel;
import io.swagger.client.model.HTTPValidationError;
import io.swagger.client.model.PostCreate;
import io.swagger.client.model.PostLanguageCreate;
import io.swagger.client.model.PostLanguageRead;
import io.swagger.client.model.PostLanguageUpdate;
import io.swagger.client.model.PostRead;
import io.swagger.client.model.PostUpdate;
import io.swagger.client.model.SuccessResponseModel;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for PostApi
 */
@Ignore
public class PostApiTest {

    private final PostApi api = new PostApi();

    /**
     * Create Post Language
     *
     * Create a PostLanguage.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createPostLanguagePostLanguagesPostTest() throws Exception {
        PostLanguageCreate body = null;
        PostLanguageRead response = api.createPostLanguagePostLanguagesPost(body);

        // TODO: test validations
    }
    /**
     * Create Post
     *
     * Create a Post.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createPostPostsPostTest() throws Exception {
        PostCreate body = null;
        PostRead response = api.createPostPostsPost(body);

        // TODO: test validations
    }
    /**
     * Delete Post Language
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deletePostLanguagePostLanguagesPostLanguageIdDeleteTest() throws Exception {
        Integer postLanguageId = null;
        SuccessResponseModel response = api.deletePostLanguagePostLanguagesPostLanguageIdDelete(postLanguageId);

        // TODO: test validations
    }
    /**
     * Delete Post
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deletePostPostsPostIdDeleteTest() throws Exception {
        Integer postId = null;
        SuccessResponseModel response = api.deletePostPostsPostIdDelete(postId);

        // TODO: test validations
    }
    /**
     * Read Post Language
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void readPostLanguagePostLanguagesPostLanguageIdGetTest() throws Exception {
        Integer postLanguageId = null;
        PostLanguageRead response = api.readPostLanguagePostLanguagesPostLanguageIdGet(postLanguageId);

        // TODO: test validations
    }
    /**
     * Read Post Languages
     *
     * Get all PostLanguage.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void readPostLanguagesPostLanguagesGetTest() throws Exception {
        String q = null;
        Integer offset = null;
        Integer limit = null;
        List<PostLanguageRead> response = api.readPostLanguagesPostLanguagesGet(q, offset, limit);

        // TODO: test validations
    }
    /**
     * Read Post
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void readPostPostsPostIdGetTest() throws Exception {
        Integer postId = null;
        PostRead response = api.readPostPostsPostIdGet(postId);

        // TODO: test validations
    }
    /**
     * Read Posts
     *
     * Get all Post.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void readPostsPostsGetTest() throws Exception {
        String q = null;
        Integer offset = null;
        Integer limit = null;
        List<PostRead> response = api.readPostsPostsGet(q, offset, limit);

        // TODO: test validations
    }
    /**
     * Update Post Language
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updatePostLanguagePostLanguagesPostLanguageIdPatchTest() throws Exception {
        PostLanguageUpdate body = null;
        Integer postLanguageId = null;
        PostLanguageRead response = api.updatePostLanguagePostLanguagesPostLanguageIdPatch(body, postLanguageId);

        // TODO: test validations
    }
    /**
     * Update Post
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updatePostPostsPostIdPatchTest() throws Exception {
        PostUpdate body = null;
        Integer postId = null;
        PostRead response = api.updatePostPostsPostIdPatch(body, postId);

        // TODO: test validations
    }
}
