/*
 * JBS Backend Service
 * Journalim Protocol Compatible Backend Service
 *
 * OpenAPI spec version: 0.0.1
 * Contact: a@azat.ai
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.ErrorResponseModel;
import io.swagger.client.model.HTTPValidationError;
import io.swagger.client.model.SuccessResponseModel;
import io.swagger.client.model.UserCreate;
import io.swagger.client.model.UserRead;
import io.swagger.client.model.UserUpdate;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for UserApi
 */
@Ignore
public class UserApiTest {

    private final UserApi api = new UserApi();

    /**
     * Create User
     *
     * Create a new User
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createUserUsersPostTest() throws Exception {
        UserCreate body = null;
        UserRead response = api.createUserUsersPost(body);

        // TODO: test validations
    }
    /**
     * Delete User
     *
     * Delete a User
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteUserUsersUserIdDeleteTest() throws Exception {
        Integer userId = null;
        SuccessResponseModel response = api.deleteUserUsersUserIdDelete(userId);

        // TODO: test validations
    }
    /**
     * Get Current User
     *
     * Get all Users
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getCurrentUserUsersMeGetTest() throws Exception {
        UserRead response = api.getCurrentUserUsersMeGet();

        // TODO: test validations
    }
    /**
     * Get User
     *
     * Get a User by ID
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getUserUsersUserIdGetTest() throws Exception {
        Integer userId = null;
        UserRead response = api.getUserUsersUserIdGet(userId);

        // TODO: test validations
    }
    /**
     * Get Users
     *
     * Get all Users. staff [ok] admin [ok]
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getUsersUsersGetTest() throws Exception {
        String q = null;
        Integer offset = null;
        Integer limit = null;
        List<UserRead> response = api.getUsersUsersGet(q, offset, limit);

        // TODO: test validations
    }
    /**
     * Update User
     *
     * Update a User
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateUserUsersUserIdPatchTest() throws Exception {
        UserUpdate body = null;
        Integer userId = null;
        UserRead response = api.updateUserUsersUserIdPatch(body, userId);

        // TODO: test validations
    }
}
