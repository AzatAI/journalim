//
// TokenAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class TokenAPI {
    /**
     Create Token

     - parameter grantType: (form)  
     - parameter username: (form)  
     - parameter password: (form)  
     - parameter scope: (form)  
     - parameter clientId: (form)  
     - parameter clientSecret: (form)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func createTokenTokenPost(grantType: String, username: String, password: String, scope: String, clientId: String, clientSecret: String, completion: @escaping ((_ data: Token?,_ error: Error?) -> Void)) {
        createTokenTokenPostWithRequestBuilder(grantType: grantType, username: username, password: password, scope: scope, clientId: clientId, clientSecret: clientSecret).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Create Token
     - POST /token
     - 

     - examples: [{contentType=application/json, example={
  "access_token" : "access_token",
  "token_type" : "token_type"
}}]
     - parameter grantType: (form)  
     - parameter username: (form)  
     - parameter password: (form)  
     - parameter scope: (form)  
     - parameter clientId: (form)  
     - parameter clientSecret: (form)  

     - returns: RequestBuilder<Token> 
     */
    open class func createTokenTokenPostWithRequestBuilder(grantType: String, username: String, password: String, scope: String, clientId: String, clientSecret: String) -> RequestBuilder<Token> {
        let path = "/token"
        let URLString = SwaggerClientAPI.basePath + path
        let formParams: [String:Any?] = [
                "grant_type": grantType,
                "username": username,
                "password": password,
                "scope": scope,
                "client_id": clientId,
                "client_secret": clientSecret
        ]

        let nonNullParameters = APIHelper.rejectNil(formParams)
        let parameters = APIHelper.convertBoolToString(nonNullParameters)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Token>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
}
