/*
 * JBS Backend Service
 * Journalim Protocol Compatible Backend Service
 *
 * OpenAPI spec version: 0.0.1
 * Contact: a@azat.ai
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.36
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from './ApiClient';
import {AnyOfGenericFileUploadResponsePath} from './model/AnyOfGenericFileUploadResponsePath';
import {AnyOfValidationErrorLocItems} from './model/AnyOfValidationErrorLocItems';
import {AttachmentCreate} from './model/AttachmentCreate';
import {AttachmentRead} from './model/AttachmentRead';
import {AttachmentUpdate} from './model/AttachmentUpdate';
import {BodyCreateTokenTokenPost} from './model/BodyCreateTokenTokenPost';
import {BodyCreateUploadUploadPost} from './model/BodyCreateUploadUploadPost';
import {ErrorResponseModel} from './model/ErrorResponseModel';
import {GenericFileUploadResponse} from './model/GenericFileUploadResponse';
import {HTTPValidationError} from './model/HTTPValidationError';
import {IssueCreate} from './model/IssueCreate';
import {IssueLanguageCreate} from './model/IssueLanguageCreate';
import {IssueLanguageRead} from './model/IssueLanguageRead';
import {IssueLanguageUpdate} from './model/IssueLanguageUpdate';
import {IssueRead} from './model/IssueRead';
import {IssueUpdate} from './model/IssueUpdate';
import {LanguageCreate} from './model/LanguageCreate';
import {LanguageRead} from './model/LanguageRead';
import {LanguageUpdate} from './model/LanguageUpdate';
import {MediaRead} from './model/MediaRead';
import {MediaUpdate} from './model/MediaUpdate';
import {PageCreate} from './model/PageCreate';
import {PageLanguageCreate} from './model/PageLanguageCreate';
import {PageLanguageRead} from './model/PageLanguageRead';
import {PageLanguageUpdate} from './model/PageLanguageUpdate';
import {PageRead} from './model/PageRead';
import {PageUpdate} from './model/PageUpdate';
import {PostCreate} from './model/PostCreate';
import {PostLanguageCreate} from './model/PostLanguageCreate';
import {PostLanguageRead} from './model/PostLanguageRead';
import {PostLanguageUpdate} from './model/PostLanguageUpdate';
import {PostRead} from './model/PostRead';
import {PostUpdate} from './model/PostUpdate';
import {PublicationCreate} from './model/PublicationCreate';
import {PublicationLanguageCreate} from './model/PublicationLanguageCreate';
import {PublicationLanguageRead} from './model/PublicationLanguageRead';
import {PublicationLanguageUpdate} from './model/PublicationLanguageUpdate';
import {PublicationRead} from './model/PublicationRead';
import {PublicationUpdate} from './model/PublicationUpdate';
import {SiteCreate} from './model/SiteCreate';
import {SiteLanguageCreate} from './model/SiteLanguageCreate';
import {SiteLanguageRead} from './model/SiteLanguageRead';
import {SiteLanguageUpdate} from './model/SiteLanguageUpdate';
import {SiteRead} from './model/SiteRead';
import {SiteUpdate} from './model/SiteUpdate';
import {SuccessResponseModel} from './model/SuccessResponseModel';
import {Token} from './model/Token';
import {UserCreate} from './model/UserCreate';
import {UserRead} from './model/UserRead';
import {UserUpdate} from './model/UserUpdate';
import {ValidationError} from './model/ValidationError';
import {AttachmentApi} from './api/AttachmentApi';
import {DefaultApi} from './api/DefaultApi';
import {IssueApi} from './api/IssueApi';
import {LanguageApi} from './api/LanguageApi';
import {MediaApi} from './api/MediaApi';
import {PageApi} from './api/PageApi';
import {PostApi} from './api/PostApi';
import {PublicationApi} from './api/PublicationApi';
import {SiteApi} from './api/SiteApi';
import {TokenApi} from './api/TokenApi';
import {UserApi} from './api/UserApi';

/**
* Journalim_Protocol_Compatible_Backend_Service.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var JbsBackendService = require('index'); // See note below*.
* var xxxSvc = new JbsBackendService.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new JbsBackendService.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new JbsBackendService.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new JbsBackendService.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 0.0.1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AnyOfGenericFileUploadResponsePath model constructor.
     * @property {module:model/AnyOfGenericFileUploadResponsePath}
     */
    AnyOfGenericFileUploadResponsePath,

    /**
     * The AnyOfValidationErrorLocItems model constructor.
     * @property {module:model/AnyOfValidationErrorLocItems}
     */
    AnyOfValidationErrorLocItems,

    /**
     * The AttachmentCreate model constructor.
     * @property {module:model/AttachmentCreate}
     */
    AttachmentCreate,

    /**
     * The AttachmentRead model constructor.
     * @property {module:model/AttachmentRead}
     */
    AttachmentRead,

    /**
     * The AttachmentUpdate model constructor.
     * @property {module:model/AttachmentUpdate}
     */
    AttachmentUpdate,

    /**
     * The BodyCreateTokenTokenPost model constructor.
     * @property {module:model/BodyCreateTokenTokenPost}
     */
    BodyCreateTokenTokenPost,

    /**
     * The BodyCreateUploadUploadPost model constructor.
     * @property {module:model/BodyCreateUploadUploadPost}
     */
    BodyCreateUploadUploadPost,

    /**
     * The ErrorResponseModel model constructor.
     * @property {module:model/ErrorResponseModel}
     */
    ErrorResponseModel,

    /**
     * The GenericFileUploadResponse model constructor.
     * @property {module:model/GenericFileUploadResponse}
     */
    GenericFileUploadResponse,

    /**
     * The HTTPValidationError model constructor.
     * @property {module:model/HTTPValidationError}
     */
    HTTPValidationError,

    /**
     * The IssueCreate model constructor.
     * @property {module:model/IssueCreate}
     */
    IssueCreate,

    /**
     * The IssueLanguageCreate model constructor.
     * @property {module:model/IssueLanguageCreate}
     */
    IssueLanguageCreate,

    /**
     * The IssueLanguageRead model constructor.
     * @property {module:model/IssueLanguageRead}
     */
    IssueLanguageRead,

    /**
     * The IssueLanguageUpdate model constructor.
     * @property {module:model/IssueLanguageUpdate}
     */
    IssueLanguageUpdate,

    /**
     * The IssueRead model constructor.
     * @property {module:model/IssueRead}
     */
    IssueRead,

    /**
     * The IssueUpdate model constructor.
     * @property {module:model/IssueUpdate}
     */
    IssueUpdate,

    /**
     * The LanguageCreate model constructor.
     * @property {module:model/LanguageCreate}
     */
    LanguageCreate,

    /**
     * The LanguageRead model constructor.
     * @property {module:model/LanguageRead}
     */
    LanguageRead,

    /**
     * The LanguageUpdate model constructor.
     * @property {module:model/LanguageUpdate}
     */
    LanguageUpdate,

    /**
     * The MediaRead model constructor.
     * @property {module:model/MediaRead}
     */
    MediaRead,

    /**
     * The MediaUpdate model constructor.
     * @property {module:model/MediaUpdate}
     */
    MediaUpdate,

    /**
     * The PageCreate model constructor.
     * @property {module:model/PageCreate}
     */
    PageCreate,

    /**
     * The PageLanguageCreate model constructor.
     * @property {module:model/PageLanguageCreate}
     */
    PageLanguageCreate,

    /**
     * The PageLanguageRead model constructor.
     * @property {module:model/PageLanguageRead}
     */
    PageLanguageRead,

    /**
     * The PageLanguageUpdate model constructor.
     * @property {module:model/PageLanguageUpdate}
     */
    PageLanguageUpdate,

    /**
     * The PageRead model constructor.
     * @property {module:model/PageRead}
     */
    PageRead,

    /**
     * The PageUpdate model constructor.
     * @property {module:model/PageUpdate}
     */
    PageUpdate,

    /**
     * The PostCreate model constructor.
     * @property {module:model/PostCreate}
     */
    PostCreate,

    /**
     * The PostLanguageCreate model constructor.
     * @property {module:model/PostLanguageCreate}
     */
    PostLanguageCreate,

    /**
     * The PostLanguageRead model constructor.
     * @property {module:model/PostLanguageRead}
     */
    PostLanguageRead,

    /**
     * The PostLanguageUpdate model constructor.
     * @property {module:model/PostLanguageUpdate}
     */
    PostLanguageUpdate,

    /**
     * The PostRead model constructor.
     * @property {module:model/PostRead}
     */
    PostRead,

    /**
     * The PostUpdate model constructor.
     * @property {module:model/PostUpdate}
     */
    PostUpdate,

    /**
     * The PublicationCreate model constructor.
     * @property {module:model/PublicationCreate}
     */
    PublicationCreate,

    /**
     * The PublicationLanguageCreate model constructor.
     * @property {module:model/PublicationLanguageCreate}
     */
    PublicationLanguageCreate,

    /**
     * The PublicationLanguageRead model constructor.
     * @property {module:model/PublicationLanguageRead}
     */
    PublicationLanguageRead,

    /**
     * The PublicationLanguageUpdate model constructor.
     * @property {module:model/PublicationLanguageUpdate}
     */
    PublicationLanguageUpdate,

    /**
     * The PublicationRead model constructor.
     * @property {module:model/PublicationRead}
     */
    PublicationRead,

    /**
     * The PublicationUpdate model constructor.
     * @property {module:model/PublicationUpdate}
     */
    PublicationUpdate,

    /**
     * The SiteCreate model constructor.
     * @property {module:model/SiteCreate}
     */
    SiteCreate,

    /**
     * The SiteLanguageCreate model constructor.
     * @property {module:model/SiteLanguageCreate}
     */
    SiteLanguageCreate,

    /**
     * The SiteLanguageRead model constructor.
     * @property {module:model/SiteLanguageRead}
     */
    SiteLanguageRead,

    /**
     * The SiteLanguageUpdate model constructor.
     * @property {module:model/SiteLanguageUpdate}
     */
    SiteLanguageUpdate,

    /**
     * The SiteRead model constructor.
     * @property {module:model/SiteRead}
     */
    SiteRead,

    /**
     * The SiteUpdate model constructor.
     * @property {module:model/SiteUpdate}
     */
    SiteUpdate,

    /**
     * The SuccessResponseModel model constructor.
     * @property {module:model/SuccessResponseModel}
     */
    SuccessResponseModel,

    /**
     * The Token model constructor.
     * @property {module:model/Token}
     */
    Token,

    /**
     * The UserCreate model constructor.
     * @property {module:model/UserCreate}
     */
    UserCreate,

    /**
     * The UserRead model constructor.
     * @property {module:model/UserRead}
     */
    UserRead,

    /**
     * The UserUpdate model constructor.
     * @property {module:model/UserUpdate}
     */
    UserUpdate,

    /**
     * The ValidationError model constructor.
     * @property {module:model/ValidationError}
     */
    ValidationError,

    /**
    * The AttachmentApi service constructor.
    * @property {module:api/AttachmentApi}
    */
    AttachmentApi,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi,

    /**
    * The IssueApi service constructor.
    * @property {module:api/IssueApi}
    */
    IssueApi,

    /**
    * The LanguageApi service constructor.
    * @property {module:api/LanguageApi}
    */
    LanguageApi,

    /**
    * The MediaApi service constructor.
    * @property {module:api/MediaApi}
    */
    MediaApi,

    /**
    * The PageApi service constructor.
    * @property {module:api/PageApi}
    */
    PageApi,

    /**
    * The PostApi service constructor.
    * @property {module:api/PostApi}
    */
    PostApi,

    /**
    * The PublicationApi service constructor.
    * @property {module:api/PublicationApi}
    */
    PublicationApi,

    /**
    * The SiteApi service constructor.
    * @property {module:api/SiteApi}
    */
    SiteApi,

    /**
    * The TokenApi service constructor.
    * @property {module:api/TokenApi}
    */
    TokenApi,

    /**
    * The UserApi service constructor.
    * @property {module:api/UserApi}
    */
    UserApi
};
