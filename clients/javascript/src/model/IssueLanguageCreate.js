/*
 * JBS Backend Service
 * Journalim Protocol Compatible Backend Service
 *
 * OpenAPI spec version: 0.0.1
 * Contact: a@azat.ai
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.36
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The IssueLanguageCreate model module.
 * @module model/IssueLanguageCreate
 * @version 0.0.1
 */
export class IssueLanguageCreate {
  /**
   * Constructs a new <code>IssueLanguageCreate</code>.
   * @alias module:model/IssueLanguageCreate
   * @class
   * @param title {String} 
   * @param version {String} 
   */
  constructor(title, version) {
    this.title = title;
    this.version = version;
  }

  /**
   * Constructs a <code>IssueLanguageCreate</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/IssueLanguageCreate} obj Optional instance to populate.
   * @return {module:model/IssueLanguageCreate} The populated <code>IssueLanguageCreate</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new IssueLanguageCreate();
      if (data.hasOwnProperty('title'))
        obj.title = ApiClient.convertToType(data['title'], 'String');
      if (data.hasOwnProperty('version'))
        obj.version = ApiClient.convertToType(data['version'], 'String');
      if (data.hasOwnProperty('author'))
        obj.author = ApiClient.convertToType(data['author'], 'String');
      if (data.hasOwnProperty('image'))
        obj.image = ApiClient.convertToType(data['image'], 'String');
      if (data.hasOwnProperty('keywords'))
        obj.keywords = ApiClient.convertToType(data['keywords'], 'String');
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('long_description'))
        obj.longDescription = ApiClient.convertToType(data['long_description'], 'String');
      if (data.hasOwnProperty('issue_id'))
        obj.issueId = ApiClient.convertToType(data['issue_id'], 'Number');
      if (data.hasOwnProperty('language_id'))
        obj.languageId = ApiClient.convertToType(data['language_id'], 'Number');
    }
    return obj;
  }
}

/**
 * @member {String} title
 */
IssueLanguageCreate.prototype.title = undefined;

/**
 * @member {String} version
 */
IssueLanguageCreate.prototype.version = undefined;

/**
 * @member {String} author
 */
IssueLanguageCreate.prototype.author = undefined;

/**
 * @member {String} image
 */
IssueLanguageCreate.prototype.image = undefined;

/**
 * @member {String} keywords
 */
IssueLanguageCreate.prototype.keywords = undefined;

/**
 * @member {String} description
 */
IssueLanguageCreate.prototype.description = undefined;

/**
 * @member {String} longDescription
 */
IssueLanguageCreate.prototype.longDescription = undefined;

/**
 * @member {Number} issueId
 */
IssueLanguageCreate.prototype.issueId = undefined;

/**
 * @member {Number} languageId
 */
IssueLanguageCreate.prototype.languageId = undefined;

